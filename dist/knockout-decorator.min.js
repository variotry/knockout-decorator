/*!
 * Knockout decorator
 * (c) vario
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */
var variotry;!function(t){var r;!function(t){function r(t,r){var e=t[r],n=ko.observable(e);u(t,r,n),Object.defineProperty(t,r,{get:n,set:n})}function e(t){return function(r,e,n){var o=n.get,a=n.set,c=ko.computed({read:function(){return o.call(r)},write:a?function(t){return a.call(r,t)}:null});t&&c.extend(t),u(r,e,c),n.get=c,a&&(n.set=c)}}function n(t,r){var e=a(t,r);return ko.isObservable(e)?e:null}function o(t,r){var e=a(t,r);return ko.isComputed(e)?e:null}function u(t,r,e){t[c]||(t[c]=[]);var n=t[c];n[r]=e}function a(t,r){var e=t[c];return e?e[r]:null}t.observable=r,t.computed=e,t.getObservable=n,t.getComputed=o;var c="__vtKnockoutObservables__"}(r=t.KnockoutDecorator||(t.KnockoutDecorator={}))}(variotry||(variotry={}));